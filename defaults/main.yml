---
beacon_node_service_name: 'beacon-node-{{ beacon_node_network }}-{{ beacon_node_repo_branch }}'
beacon_node_service_path: '/data/{{ beacon_node_service_name }}'
beacon_node_data_path: '{{ beacon_node_service_path }}/data'
beacon_node_repo_path: '{{ beacon_node_service_path }}/repo'
beacon_node_logs_link: '{{ beacon_node_service_path }}/logs'
beacon_node_netkey_path: '{{ beacon_node_data_path }}/netkey'
beacon_node_era_dir_path: '{{ beacon_node_data_path }}/era'
beacon_node_secrets_path: '{{ beacon_node_data_path }}/secrets'
beacon_node_validators_path: '{{ beacon_node_data_path }}/validators'

# Should be: nextPowerOfTwo(number_of_validators + 1024)
beacon_node_service_nofile_limit: 16384
beacon_node_user: 'nimbus'
beacon_node_group: 'staff'

beacon_node_build_service_name: 'build-{{ beacon_node_service_name }}'
beacon_node_build_timer_enabled: true
beacon_node_build_timer_timeout: 3600
beacon_node_build_frequency: 'daily'
beacon_node_build_days_kept: 3
beacon_node_build_jobs: '{{ ansible_processor_vcpus / 2 | round(0, "ceil") }}'
beacon_node_build_log_level: 'TRACE'
beacon_node_build_restarts_service: true
beacon_node_build_nim_flags: >-
  -d:noSignalHandler

# Periodic forced node resync.
beacon_node_resync_enabled: false
beacon_node_resync_timer_enabled: true
beacon_node_resync_timer_service_name: 'resync-{{ beacon_node_service_name }}'
beacon_node_resync_timer_user: 'root' # Needed too start service back up.
beacon_node_resync_timer_group: '{{ beacon_node_group }}'
beacon_node_resync_timer_timeout: 43200
beacon_node_resync_timer_frequency: 'weekly'
beacon_node_resync_timer_random_delay_sec: 86400 # day
#beacon_node_resync_timer_trusted_api_url: ~

beacon_node_repo_url: 'https://github.com/status-im/nimbus-eth2'
beacon_node_repo_branch: 'stable'

beacon_node_network: 'mainnet'
beacon_node_log_level: 'INFO' # TRACE DEBUG INFO NOTICE WARN ERROR FATAL NONE
beacon_node_log_format: 'json' # auto colors nocolors json none
beacon_node_history_retention: 'prune' # archive / prune
beacon_node_sync_light_client: false
beacon_node_subscribe_all: false
beacon_node_doppelganger_detection: true
beacon_node_doppelganger_exit_code: 129
beacon_node_extra_flags: []

# Validator Monitoring
beacon_node_validator_monitor_auto: false
beacon_node_validator_monitor_details: false
beacon_node_validator_monitor_pubkeys: []

# For validation
beacon_node_valid_network_names: ["pyrmont", "prater", "mainnet", "steklo", "nocturne", "kiln", "ropsten", "sepolia"]

# connectivity settings
beacon_node_public_address: '{{ ansible_host }}'
beacon_node_max_peers: 160
beacon_node_discovery_port: 9000
beacon_node_listening_port: 9000

# Firewall
beacon_node_firewall_libp2p_open: true
beacon_node_firewall_metrics_open: true

# Scraping of metrics done via VPN. Protected by firewall.
beacon_node_metrics_enabled: true
beacon_node_metrics_address: '0.0.0.0'
beacon_node_metrics_port: 9200

# REST API
beacon_node_rest_enabled: true
beacon_node_rest_address: '127.0.0.1'
beacon_node_rest_port: 5052
beacon_node_rest_allow_origin: '' # '' to use default
beacon_node_rest_max_body_size: 16384
beacon_node_rest_max_headers_size: 128

# Light client data
beacon_node_light_client_data_enabled: false
beacon_node_light_client_data_serve: true
beacon_node_light_client_data_import_mode: 'only-new'
beacon_node_light_client_data_max_periods: -1 # -1 to use default

# How many hardware threads to use
beacon_node_threads: 0

# Automatically distribute validators
beacon_node_dist_validators_enabled: false
beacon_node_dist_validators_name: '{{ beacon_node_network }}_deposits'
beacon_node_dist_validators_sec_path: '{{ beacon_node_secrets_path }}'
beacon_node_dist_validators_val_path: '{{ beacon_node_validators_path }}'
#beacon_node_dist_validators_name: ~
#beacon_node_dist_validators_start: ~
#beacon_node_dist_validators_end: ~

# Suggests it to the Execution Layer client.
#beacon_node_suggested_fee_recipient: ~

# Consul service definition settings
beacon_node_consul_service_name: 'beacon-node'
beacon_node_consul_service_file_name: '{{ beacon_node_service_name | replace("-", "_") }}'
beacon_node_consul_metrics_service_name: '{{ beacon_node_consul_service_name }}-metrics'

# WebSocket or HTTP URLs for execution layet Engine API
beacon_node_exec_layer_urls: []
#beacon_node_exec_layer_jwt_secret: ~
beacon_node_exec_layer_jwt_secret_path: '{{ beacon_node_service_path }}/jwt.hex'

# Builder for profit-optimized execution payloads.
beacon_node_payload_builder_enabled: false
#beacon_node_payload_builder_url: ~

# Version of schema for SQLite slashing database.
beacon_node_slashing_db_kind: 'v2'

# Netkey file contents, optional.
#beacon_node_netkey: '{"key":"json"}'

# Which version of Nim to use for the build
# By default, it would use the one specified by the pinned nimbus-build-system
beacon_node_nim_commit: ''
